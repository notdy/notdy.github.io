{"title":"策略模式","uid":"8ced7c3b7dad33d06ee59bde7028cd4a","slug":"策略模式","date":"2024-09-23T14:56:19.000Z","updated":"2024-09-23T14:56:43.378Z","comments":true,"path":"api/articles/策略模式.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>是记录看《大话设计模式》这本书的感受</p></blockquote>\n<p>还是从一个想法开始入手，书中的是让我们写一个商场收银系统，由于我java没有学GUI的那部分，我就直接将效果图贴过来了<br><img src=\"/../images/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/%E5%95%86%E5%9C%BA%E6%94%B6%E9%93%B6%E7%B3%BB%E7%BB%9F%E6%95%88%E6%9E%9C%E5%9B%BE.jpg\" alt=\"商场收银系统效果图\"><br>不难写出下面的伪代码</p>\n<h1 id=\"1-0\"><a href=\"#1-0\" class=\"headerlink\" title=\"1.0\"></a>1.0</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总计=<span class=\"number\">0</span>;</span><br><span class=\"line\">计算总费用()&#123;</span><br><span class=\"line\">   单次费用=单价*数量</span><br><span class=\"line\">    总计累加单次费用</span><br><span class=\"line\">    将此次商品加入显示结果集合中，格式:单价:xxxx 数量: xxxx 合计:xxxx</span><br><span class=\"line\">    在界面上显示总计费用</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"1-1-增加打折\"><a href=\"#1-1-增加打折\" class=\"headerlink\" title=\"1.1 增加打折\"></a>1.1 增加打折</h1><p>改,将打折直接加入到下拉列表中，根据当前下拉列表选中的项来计算总费用,伪代码如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">页面初始化方法()&#123;</span><br><span class=\"line\">    将折扣力度加入到下拉列表中</span><br><span class=\"line\">    折扣力度分别是正常收费，<span class=\"number\">7</span>折，<span class=\"number\">6</span>折，索引依次是<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">总计=<span class=\"number\">0</span>;</span><br><span class=\"line\">计算总费用()&#123;</span><br><span class=\"line\">    单次费用 = 单价*数量</span><br><span class=\"line\">    对当前下拉列表中选中的项做判断，根据索引对单次费用进行操作</span><br><span class=\"line\">    下面的代码和<span class=\"number\">1.0</span>版本一致</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是忽略了一个问题，是在商场使用，而商场的活动有一个特点：持续时间短，改变大。若是以上面的方式实现的话，如果商场搞出了一个满多少返多少或满多少积分减多少的活动呢？<br>商场常见的活动如下:</p>\n<ol>\n<li>满xxx返xxx</li>\n<li>打xxx折</li>\n</ol>\n<p>这样的话关于打折的只用写一个类即可,初始化时传入打几折即可<br>书中的原文让我茅塞顿开</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><b>面向对象的编程,并不是类越多越好,类的划分是为了封装，但分类的基础是抽象,具有相同属性和功能的对象的抽象集合才是类<b></p></blockquote>\n<p>所有的活动抽象成CashSuper,满xx返xx,打xx折全部继承自CashSuper<br><img src=\"/../images/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/FactoryAttempt.jpg\"></p>\n<h1 id=\"融入简单工厂\"><a href=\"#融入简单工厂\" class=\"headerlink\" title=\"融入简单工厂\"></a>融入简单工厂</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Write</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入总计费用:&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">fees</span> <span class=\"operator\">=</span> s.nextDouble();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;当前活动 0:正常收费 1:7折 2:6折 3:满300减100\\n请输入你选择的活动编号&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">idx</span> <span class=\"operator\">=</span> s.nextInt();</span><br><span class=\"line\">        <span class=\"type\">CashSuper</span> <span class=\"variable\">cs</span> <span class=\"operator\">=</span> CashFactory.createCashSuper(fees,idx);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;总费用是:&quot;</span>);</span><br><span class=\"line\">        System.out.println(cs.acceptMoney());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CashFactory</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//idx是选择的活动</span></span><br><span class=\"line\">    <span class=\"comment\">//0:正常收费 1:7折 2:6折 3:满300减100</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> CashContext <span class=\"title function_\">createCashSuper</span><span class=\"params\">(<span class=\"type\">double</span> money,<span class=\"type\">int</span> idx)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">CashContext</span> <span class=\"variable\">cc</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (idx)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                cs = <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">CashNormal</span>(money));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                <span class=\"comment\">//这里最好分开写</span></span><br><span class=\"line\">                cs = <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">CashDiscount</span>(money,idx==<span class=\"number\">1</span>?<span class=\"number\">0.7</span>:<span class=\"number\">0.6</span>));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                cs = <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">CashReturn</span>(money,<span class=\"number\">300</span>,<span class=\"number\">100</span>));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cs;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CashSuper</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">double</span> money;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CashSuper</span><span class=\"params\">(<span class=\"type\">double</span> money)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"type\">double</span> <span class=\"title function_\">acceptMoney</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CashDiscount</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">CashSuper</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> discount;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CashDiscount</span><span class=\"params\">(<span class=\"type\">double</span> money,<span class=\"type\">double</span> discount)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(money);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.discount=discount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">acceptMoney</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//不打折discount就是1,把这个不打折的抽象成一个类，让每个类的职责单一化</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> money*discount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CashNormal</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">CashSuper</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CashNormal</span><span class=\"params\">(<span class=\"type\">double</span> money)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">acceptMoney</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CashReturn</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">CashSuper</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> condition;<span class=\"comment\">//条件</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> returnMoney;<span class=\"comment\">//返利</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CashReturn</span><span class=\"params\">(<span class=\"type\">double</span> money,<span class=\"type\">double</span> condition,<span class=\"type\">double</span> returnMoney)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(money);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.condition = condition;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.returnMoney = returnMoney;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">acceptMoney</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.money - Math.floor(<span class=\"built_in\">this</span>.money/<span class=\"built_in\">this</span>.condition)*<span class=\"built_in\">this</span>.returnMoney;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不足之处:</p>\n<ul>\n<li>数据校验没写</li>\n<li>如果要增加打5折和打9折的活动，这里有一个想法，根据字符串判断是那种活动，若是打折活动，将折扣截取出来，这样就不用写重复的代码了</li>\n<li>如果要增加满多少积分换取奖品呢</li>\n<li>如果商场要把满300减100改成满300减50呢？又要改代码，麻烦</li>\n</ul>\n<p>接下来上策略模式</p>\n<h1 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>定义: 策略模式(Strategy),它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化，不会影响到使用算法的客户<br>就这个例子而言，算法就是每一种活动的对钱的操作</p></blockquote>\n<h2 id=\"整体结构图\"><a href=\"#整体结构图\" class=\"headerlink\" title=\"整体结构图\"></a>整体结构图</h2><p><img src=\"/../images/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/StrategyPattern.jpg\"></p>\n<p>简易策略模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Context</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">Strategy</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Context</span><span class=\"params\">(Strategy s)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.s = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">ContextMethod</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        s.AlgorithmMethod();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Strategy</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//抽象算法方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title function_\">AlgorithmMethod</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteA</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Strategy</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">AlgorithmMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;算法A实现&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteB</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Strategy</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">AlgorithmMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;算法B实现&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>基于策略模式对基于简单工厂的进行改造，加一个CashContext类，改写客户端的方法，Strategy对应到这个例子就是基于简单工厂的CashSuper类。<br>CashContext类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CashContext</span>&#123;</span><br><span class=\"line\">    CashSuper cs;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CashContext</span><span class=\"params\">(<span class=\"type\">int</span> idx,<span class=\"type\">double</span> money)</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">switch</span> (idx)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                cs = <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">CashNormal</span>(money));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                <span class=\"comment\">//这里最好分开写</span></span><br><span class=\"line\">                cs = <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">CashDiscount</span>(money,idx==<span class=\"number\">1</span>?<span class=\"number\">0.7</span>:<span class=\"number\">0.6</span>));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                cs = <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">CashReturn</span>(money,<span class=\"number\">300</span>,<span class=\"number\">100</span>));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">ContextMethod</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        cs.acceptMoney();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>客户端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">CashContext</span> <span class=\"variable\">cc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CashContext</span>(idx,fees)</span><br><span class=\"line\">System.out.println(cc.acceptMoney());</span><br></pre></td></tr></table></figure>\n<p>搞定</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ol>\n<li>策略模式可以以相同的方式调用所有的算法，降低了各种算法类之间的耦合。能理解前面半句话从客户端的<code>cc.acceptMoney()</code>可以看出来，都是调用一个acceptMoney，降低各种算法之间的耦合有点感触，可能是算法之间没有彼此依赖，这样改变一个算法其他的算法不受影响</li>\n<li>策略模式的Strategy类层次为Context定义了一系列的可供重用的算法或行为。继承有助于析取出这些算法中的公共功能。就这个例子而言这里的公共功能就是计算钱的功能，如果把属性算上的话，那么抽象类CashSuper的money属性也算一个。</li>\n<li>策略模式简化了单元测试。这个理解不了，单元测试用过，但是没什么感触</li>\n<li>针对于if语句中堆砌了大量的操作的情况，把这些大量的操作封装成一个个Strategy类，这样利用策略模式的特点之一：以相同的方式调用所有的算法，这样可以消除语句</li>\n</ol>\n<h2 id=\"面向对象的理解\"><a href=\"#面向对象的理解\" class=\"headerlink\" title=\"面向对象的理解\"></a>面向对象的理解</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>类的划分是为了封装，但划分的前提是抽象,具有相同属性和功能的对象的抽象集合才是类<b><br>继承，将共同属性和行为丢到父类中，这样减少代码冗余</p></blockquote>\n<p>搞定</p>\n","text":" 是记录看《大话设计模式》这本书的感受 还是从一个想法开始入手，书中的是让我们写一个商场收银系统，由于我java没有学GUI的那部分，我就直接将效果图贴过来了不...","permalink":"/post/策略模式","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"设计模式","slug":"设计模式","count":2,"path":"api/tags/设计模式.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-0\"><span class=\"toc-text\">1.0</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-1-%E5%A2%9E%E5%8A%A0%E6%89%93%E6%8A%98\"><span class=\"toc-text\">1.1 增加打折</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%9E%8D%E5%85%A5%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82\"><span class=\"toc-text\">融入简单工厂</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">策略模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84%E5%9B%BE\"><span class=\"toc-text\">整体结构图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">面向对象的理解</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"求约数","uid":"d7ab01acb793f490ba4076334688907a","slug":"求约数","date":"2024-09-23T14:56:52.000Z","updated":"2024-09-23T14:57:07.545Z","comments":true,"path":"api/articles/求约数.json","keywords":null,"cover":null,"text":" 数论的一些东西 题目描述:第一行是a，表示接下来a行是输入的数，对于每一个数要从小到大输出他的约数 记住一个性质，一个数的约数是成对出现的，例如 24 能被2...","permalink":"/post/求约数","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"筛质数","uid":"183beebca0c6bcbcb988690a51b52267","slug":"筛质数","date":"2024-09-23T14:55:48.000Z","updated":"2024-09-23T14:56:10.224Z","comments":true,"path":"api/articles/筛质数.json","keywords":null,"cover":null,"text":"题目给定一个正整数 n，请你求出 1∼n 中质数的个数。 输入格式共一行，包含整数 n。 输出格式共一行，包含一个整数，表示 1∼n 中质数的个数。 数据范围 ...","permalink":"/post/筛质数","photos":[],"count_time":{"symbolsCount":919,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}