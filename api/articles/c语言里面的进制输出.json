{"title":"c语言里面的进制输出","uid":"38267af395118d175579925f047bb5c3","slug":"c语言里面的进制输出","date":"2023-10-27T08:50:47.000Z","updated":"2023-10-27T08:51:29.957Z","comments":true,"path":"api/articles/c语言里面的进制输出.json","keywords":null,"cover":null,"content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">scanf_s(<span class=\"string\">&quot;%d&quot;</span>,&amp;num);</span><br><span class=\"line\"><span class=\"type\">char</span> str[<span class=\"number\">256</span>] = &#123; <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">_itoa_s(num, str, <span class=\"number\">64</span>,<span class=\"number\">2</span>);<span class=\"comment\">//这个64是代表着str的长度应该是，超过了str的长度就会报str附近的堆栈已经损坏</span></span><br><span class=\"line\"><span class=\"comment\">//num是进行转换的数</span></span><br><span class=\"line\"><span class=\"comment\">//str是存放结果的字符数组</span></span><br><span class=\"line\"><span class=\"comment\">//64我也不清楚，</span></span><br><span class=\"line\"><span class=\"comment\">//2是进制，后面的一次类推</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">_itoa_s(num, str, <span class=\"number\">64</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str);</span><br><span class=\"line\"></span><br><span class=\"line\">_itoa_s(num, str, <span class=\"number\">64</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str);</span><br><span class=\"line\"></span><br><span class=\"line\">_itoa_s(num, str, <span class=\"number\">64</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>很简单对吧，如果要将其结果输入或者输出至文本文件中呢?</p>\n<h1 id=\"输入输出至文本文件中\"><a href=\"#输入输出至文本文件中\" class=\"headerlink\" title=\"输入输出至文本文件中\"></a>输入输出至文本文件中</h1><p>首先介绍一下在cmd中 &lt; &gt;是什么意思，这个是重定向符号<br>例子  进制转换.exe &lt;1.txt 把1.txt中的内容输入至进制转换.exe中<br>进制转换.exe &gt; 1.txt 把进制转换.exe中的结果输出至1.txt</p>\n<p>ok,<br>例子<br>把十进制分别转换成B&#x2F;D&#x2F;O&#x2F;H并写入指定的文本文件中<br>win+r 进入cmd界面<br>切换到程序所在的目录，再切换到Debug文件夹下(这是VS2019,其他的我不清楚，只要能找到那个以exe结尾的可执行文件就行)<br>输入 程序名.exe &lt;1.txt<br>输出 程序名.exe &gt;2.txt<br>图片以后再补充</p>\n","feature":true,"text":"1234567891011121314151617181920 int num = 0;scanf_s(&quot;%d&quot;,&amp;num);cha...","permalink":"/post/c语言里面的进制输出","photos":[],"count_time":{"symbolsCount":768,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":2,"path":"api/tags/C语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E8%87%B3%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E4%B8%AD\"><span class=\"toc-text\">输入输出至文本文件中</span></a></li></ol>","author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"错误\tC2371\tCheer 重定义；不同的基类型","uid":"2878224f494f13aa64aec2ca34f9f0c1","slug":"不同的基类型","date":"2023-10-27T08:44:01.000Z","updated":"2023-10-27T08:49:21.348Z","comments":true,"path":"api/articles/不同的基类型.json","keywords":null,"cover":[],"text":"错误 C2371 “Cheer”: 重定义；不同的基类型 问题区: 原因这是因为c语言编译器是从上往下执行的，也就是说你必须要把使用的函数名放在main函数之前...","permalink":"/post/不同的基类型","photos":[],"count_time":{"symbolsCount":210,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"VS报错","slug":"VS报错","count":2,"path":"api/tags/VS报错.json"}],"author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}},"feature":true}}