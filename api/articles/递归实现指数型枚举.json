{"title":"递归实现指数型枚举","uid":"3e7eb9f9b585e5605ca004891ab1c7ad","slug":"递归实现指数型枚举","date":"2024-09-23T14:53:32.000Z","updated":"2024-09-23T14:54:10.834Z","comments":true,"path":"api/articles/递归实现指数型枚举.json","keywords":null,"cover":[],"content":"<h1 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h1><p><a href=\"https://www.acwing.com/problem/content/94/\">递归实现指数型枚举</a></p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>每个数有两个状态，分别是选和不选</p>\n<p>将这两个状态分别用1和2来代替，1-&gt;选,2-&gt;不选</p>\n<p>就是枚举1~n的每个数字的状态，递归树如下<br><img src=\"/../images/Acwing/92/question.jpg\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Main</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] data;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> u)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(u&gt;n)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(data[i]==<span class=\"number\">1</span>)</span><br><span class=\"line\">                    System.out.print(i+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        data[u]=<span class=\"number\">2</span>;<span class=\"comment\">//不选</span></span><br><span class=\"line\">        dfs(u+<span class=\"number\">1</span>);</span><br><span class=\"line\">        data[u] = <span class=\"number\">0</span>;<span class=\"comment\">//恢复现场</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        data[u]=<span class=\"number\">1</span>;<span class=\"comment\">//选择</span></span><br><span class=\"line\">        dfs(u+<span class=\"number\">1</span>);</span><br><span class=\"line\">        data[u] =<span class=\"number\">0</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in));</span><br><span class=\"line\">        n = Integer.parseInt(br.readLine());</span><br><span class=\"line\">        data = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n+<span class=\"number\">10</span>];</span><br><span class=\"line\">        dfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">        br.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>完成</p>\n","text":"题目描述递归实现指数型枚举 思路每个数有两个状态，分别是选和不选 将这两个状态分别用1和2来代替，1->选,2->不选 就是枚举1~n的每个数字的状态，递归树如...","permalink":"/post/递归实现指数型枚举","photos":[],"count_time":{"symbolsCount":921,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"简单工厂模式","uid":"8ba451d9968003045919daef83bc7892","slug":"简单工厂模式","date":"2024-09-23T14:54:54.000Z","updated":"2024-09-23T14:55:29.532Z","comments":true,"path":"api/articles/简单工厂模式.json","keywords":null,"cover":[],"text":" 这个系列主要是记录我看大话设计模式这一本书的一些感受，会有部分图片是来自于《大话设计模式》这本书 设计一个计算器,以java为例 需求第一个版本不费吹灰之力，...","permalink":"/post/简单工厂模式","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"设计模式","slug":"设计模式","count":2,"path":"api/tags/设计模式.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"约数个数","uid":"6f79746afc3c4630b370e421378a0b17","slug":"约数个数","date":"2024-09-23T14:46:30.000Z","updated":"2024-09-23T14:51:11.764Z","comments":true,"path":"api/articles/约数个数.json","keywords":null,"cover":null,"text":"这个是纯粹的欧拉函数转换，原理暂时不太清楚，这周末开始补 1234567891011121314151617181920212223242526import j...","permalink":"/post/约数个数","photos":[],"count_time":{"symbolsCount":849,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}