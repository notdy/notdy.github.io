{"title":"springboot访问请求404的原因","uid":"b395fca2233b13450c189f3b1de80e06","slug":"springboot访问请求404的原因","date":"2023-11-02T01:08:02.000Z","updated":"2023-11-10T12:31:58.008Z","comments":true,"path":"api/articles/springboot访问请求404的原因.json","keywords":null,"cover":[],"content":"<blockquote>\n<p>是记录，可能出现错误</p>\n</blockquote>\n<p>可能出现的原因<br>1.你请求的URL路径不对,比如说你请求的路径是/usr/list,GET方法,但是你UserController上面的RequestMapping是这个样子:@RequestMapping(“user”)，有可能哈<br>2.前端的请求时GET方法，后端对应的处理函数的方法是非GET方法<br>3.Controller和RestController注解混用了，两个中删除一个试试<br>4.访问的是静态资源，那么查看是否配置好了静态资源，就是把静态资源放到Resources下面的static文件夹中，也可以通过配置类来自定义存放路径<br><img src=\"../images/f8a50d4efbe9431d95f030f3c88acfc9.png\" alt=\"在这里插入图片描述\"><br>下面是通过配置类的方式，来配置静态资源存放的路径<br>我的静态资源是直接放在Resources下面的，新建一个类，类名随意</p>\n<blockquote>\n<p>继承WebMvcConfigurationSupport<br>重写addResourceHandlers方法<br>在类上面加上@Configuration注解</p>\n</blockquote>\n<pre><code class=\"lang-java\">@Configuration\n@Slf4j\npublic class WebMvcConfig extends WebMvcConfigurationSupport &#123;\n    /**\n     * 配置静态资源映射\n     *\n     * @param registry\n     **/\n    @Override\n    protected void addResourceHandlers(ResourceHandlerRegistry registry) &#123;\n        log.info(&quot;开始进行静态资源映射&quot;);\n        //将路径中包含backend的请求映射到backend文件夹下\n\n//这句话的意思是，只要请求的是/backend下面的文件都映射到Resources下面的backend文件夹下面,classpath:\n        registry.addResourceHandler(&quot;/backend/**&quot;).addResourceLocations(&quot;classpath:/backend/&quot;);\n//上同        \n        registry.addResourceHandler(&quot;/front/**&quot;).addResourceLocations(&quot;classpath:/front/&quot;);\n    &#125;\n    &#125;\n</code></pre>\n<p>5.你的Controller类没有被扫描到，这种情况一般是启动类在一个包里面<br><img src=\"../images/2.jpg\" alt=\"在这里插入图片描述\"><br>解决办法:</p>\n<ol>\n<li>把你的启动类从包里面拿出来，放到外面，如图所示<br><img src=\"../images/102.jpg\" alt=\"\"><ol>\n<li>用和MapperScan和scanBasePackages来指明需要扫描的包<br>如图所示<br><img src=\"../images/999.jpg\" alt=\"在这里插入图片描述\"></li>\n</ol>\n</li>\n<li>项目中有多个SpringBootServletInitializer子类<br>此类问题表现是，项目按模块划分，多个模块内包含Controller。在开发调试阶段正常，单独运行每个模块也正常；使用tomcat部署后，总会随机出现一些模块的Controller访问不了的情况。<br>这种情况，多是因为每个模块都创建了SpringBootServletInitailizer子类。<br>解决办法就是只保留入口模块的SpringBootServletInitialzer子类即可<br>补充:<br>若是线上部署阶段排错思路<br>1.确定资源确实是存在的<br>2.随机测试几个接口，看看是否都是404。</li>\n</ol>\n<ul>\n<li>如果都是404，很可能是nginx配置错误</li>\n<li>如果部分404，且是按模块404，查看项目中是否有多个SpringBootServletInitializer子类</li>\n</ul>\n","text":" 是记录，可能出现错误 可能出现的原因1.你请求的URL路径不对,比如说你请求的路径是/usr/list,GET方法,但是你UserController上面的R...","permalink":"/post/springboot访问请求404的原因","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"toc":"","author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Ubuntu22.04搭建mysql主从复制","uid":"af286b6aa711a74975488d92e69b597a","slug":"Ubuntu22-04搭建mysql主从复制","date":"2023-11-02T01:22:53.000Z","updated":"2023-11-02T01:29:29.604Z","comments":true,"path":"api/articles/Ubuntu22-04搭建mysql主从复制.json","keywords":null,"cover":[],"text":" 记录哈，这个需要两台服务器，每台服务器上面都要安装mysql，若是没有安装，请分别在两台服务器上面运行下面的命令sudo apt install mysql-...","permalink":"/post/Ubuntu22-04搭建mysql主从复制","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Ubuntu","slug":"Ubuntu","count":1,"path":"api/tags/Ubuntu.json"},{"name":"Mysql","slug":"Mysql","count":1,"path":"api/tags/Mysql.json"}],"author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}}},"next_post":{"title":"Windows远程连接Redis(Ubuntu)","uid":"39b466b7b3169c1cbcc3565a0dd5f50c","slug":"Windows远程连接Redis-Ubuntu","date":"2023-11-02T00:59:19.000Z","updated":"2023-11-02T00:59:52.353Z","comments":true,"path":"api/articles/Windows远程连接Redis-Ubuntu.json","keywords":null,"cover":null,"text":"环境 Windows版本:Win11 家庭版 Linux版本:Ubuntu22.04 Redis版本:Redis - 6.0.16 IDE: IDEA 2022...","permalink":"/post/Windows远程连接Redis-Ubuntu","photos":[],"count_time":{"symbolsCount":365,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Linux","slug":"Linux","count":2,"path":"api/tags/Linux.json"},{"name":"Redis","slug":"Redis","count":1,"path":"api/tags/Redis.json"}],"author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}}}}