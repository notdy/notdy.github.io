{"title":"Acwing-877 扩展欧几里得算法","uid":"f9c782ac3730228558768bfbe2f35bca","slug":"Acwing-877-扩展欧几里得算法","date":"2023-12-19T13:31:45.000Z","updated":"2023-12-19T14:09:41.867Z","comments":true,"path":"api/articles/Acwing-877-扩展欧几里得算法.json","keywords":null,"cover":null,"content":"<p>给定 n 对正整数 <code>ai</code>,<code>bi</code>，对于每对数，求出一组 <code>xi</code>,<code>yi</code>，使其满足 <code>ai×xi+bi×yi=gcd(ai,bi)</code></p>\n<p>输入格式<br>第一行包含整数 n</p>\n<p>接下来 n 行，每行包含两个整数 ai,bi</p>\n<p>输出格式<br>输出共 n<br> 行，对于每组 ai,bi<br>，求出一组满足条件的 xi,yi<br>，每组结果占一行。</p>\n<p>本题答案不唯一，输出任意满足条件的 xi,yi<br> 均可。</p>\n<p>数据范围<br>1≤n≤105</p>\n<p>1≤ai,bi≤2×109</p>\n<p>输入样例：</p>\n<blockquote>\n<p>2</p>\n<p>4 6<br>8 18</p>\n<p>输出样例：</p>\n<p>-1 1</p>\n<p>-2 1</p>\n<h1 id=\"数学前置知识\"><a href=\"#数学前置知识\" class=\"headerlink\" title=\"数学前置知识\"></a>数学前置知识</h1><p>a % b = a- a/b * b 注意 a/b是向下取整<br>$ax+by=gcd(a,b)$</p>\n</blockquote>\n<p>$gcd(a,b)=gcd(b,a\\%b)$</p>\n<p>将a=b，b=a%b带入ax+by得</p>\n<p>$bx_1 + (a\\%b)y_1 = bx_1 +(a-a/b <em>b)</em>y_1=bx_1+ay_1-(a/b)<br><em>b</em>y_1=ay_1+b(x_1-a/b*y_1)$</p>\n<p>那么x=y1, y=x1-a/b*y1</p>\n<h1 id=\"板子1\"><a href=\"#板子1\" class=\"headerlink\" title=\"板子1\"></a>板子1</h1><pre><code class=\"lang-java\">static int[] x = new int[1];\nstatic int[] y = new int[1];\npublic static int exgcd(int a,int b,int[] x,int[] y)&#123;\n    if(b==0)&#123;\n        //gcd(a,0) = a \n        // ax+by = a\n        // x = 1, y =0\n        x[0]=1;\n        y[0]=0;\n        return a;\n    &#125;\n    int d = exgcd(b,a%b,x,y);\n    int temp = x[0];//更新y[0]时需要用到x[0]\n    x[0] = y[0];\n    y[0] = temp - a/b * y[0];\n    return d;\n&#125;\n</code></pre>\n<h1 id=\"板子2\"><a href=\"#板子2\" class=\"headerlink\" title=\"板子2\"></a>板子2</h1><h2 id=\"推导\"><a href=\"#推导\" class=\"headerlink\" title=\"推导\"></a>推导</h2><p>$ax+by=gcd(a,b)$</p>\n<p>$gcd(a,b)=gcd(b,a\\%b)$<br>把b带入ax+by中得b中，把a%b代入ax+by得a中可得</p>\n<p>$(a\\%b)x_1 + by_1 = (a-a/b <em>b)</em>x_1+by_1 =ax_1-a/b<em>b</em>x_1+b<em>y_1=a</em>x_1+b(y_1-a/b*x_1$)</p>\n<p>这里得$x_1$就是x，所以x不用边，只需要改变y就好</p>\n<pre><code class=\"lang-java\">public static int exgcd(int a,int b,int[] x,int[] y)&#123;\n    if(b==0)&#123;\n        //gcd(a,0) = a \n        // ax+by = a\n        // x = 1, y =0\n        x[0]=1;\n        y[0]=0;\n        return a;\n    &#125;\n    int d = exgcd(b,a%b,y,x);\n    y[0] -= a/b * x[0];\n    return d;\n&#125;\n</code></pre>\n","feature":true,"text":"给定 n 对正整数 ai,bi，对于每对数，求出一组 xi,yi，使其满足 ai×xi+bi×yi=gcd(ai,bi) 输入格式第一行包含整数 n 接下来 n...","permalink":"/post/Acwing-877-扩展欧几里得算法","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%A6%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">数学前置知识</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9D%BF%E5%AD%901\"><span class=\"toc-text\">板子1</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9D%BF%E5%AD%902\"><span class=\"toc-text\">板子2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E5%AF%BC\"><span class=\"toc-text\">推导</span></a></li></ol></li></ol>","author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Acwing 867 线性同余方程","uid":"0ed6b4d593b19a6383f83c1ccac6d61f","slug":"Acwing-867-线性同余方程","date":"2023-12-19T08:23:54.000Z","updated":"2023-12-19T08:29:43.584Z","comments":true,"path":"api/articles/Acwing-867-线性同余方程.json","keywords":null,"cover":[],"text":"题目描述 给定 n 组数据 ai,bi,mi，对于每组数求出一个 xi，使其满足 ai×xi≡bi(modmi)，如果无解则输出 impossible。 输入格...","permalink":"/post/Acwing-867-线性同余方程","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"}],"author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}},"feature":true}}