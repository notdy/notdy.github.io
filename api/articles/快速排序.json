{"title":"快速排序","uid":"9c04d15496da1d73edddda137155e866","slug":"快速排序","date":"2024-09-23T14:57:18.000Z","updated":"2024-09-23T14:57:34.449Z","comments":true,"path":"api/articles/快速排序.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>记录一下过程</p></blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException&#123;</span><br><span class=\"line\">        <span class=\"type\">InputStreamReader</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in);</span><br><span class=\"line\">        <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(in);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> Integer.parseInt(br.readLine());</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[num];</span><br><span class=\"line\">        String[] res = br.readLine().split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; num; i++) </span><br><span class=\"line\">            arr[i] = Integer.parseInt(res[i]);</span><br><span class=\"line\">        quickSort(arr, <span class=\"number\">0</span>, num - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; num; i++)</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        br.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">quickSort</span><span class=\"params\">(<span class=\"type\">int</span>[] arr,<span class=\"type\">int</span> left,<span class=\"type\">int</span> right)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//快速排序要写大于等于，可能会没有数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(left &gt;= right)<span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> i=left-<span class=\"number\">1</span>,j=right+<span class=\"number\">1</span>,value = arr[left+right+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i&lt;j)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">do</span> i++;<span class=\"keyword\">while</span> (arr[i]&lt; value);</span><br><span class=\"line\">            <span class=\"keyword\">do</span> j--;<span class=\"keyword\">while</span> (arr[j]&gt;value);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&lt;j)&#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">                arr[i]=arr[j];</span><br><span class=\"line\">                arr[j]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        quickSort(arr,left,j);  </span><br><span class=\"line\">        <span class=\"comment\">//这里写j的话，上面的value不能取成right和left+right+1&gt;&gt;1，其他的都可以。下面的left换成j+1</span></span><br><span class=\"line\">        <span class=\"comment\">//这里写i的话，上面的value不能取成left和(left+right)/2 其他的都可以，下面的left换成i-1;</span></span><br><span class=\"line\">        <span class=\"comment\">// 反例   1,2</span></span><br><span class=\"line\">        quickSort(arr,j+<span class=\"number\">1</span>,right);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>小细节:</p>\n<ol>\n<li>指针移动的判断不带等号</li>\n<li>使用do-while在判断前先移动指针</li>\n<li>区间左半边是[l,j]而不是[l,i]</li>\n<li>value的位置<br>写法1:<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">value = arr[left+right&gt;&gt;<span class=\"number\">1</span>]; <span class=\"comment\">//只要不写成right或left+right+1&gt;&gt;1都可以</span></span><br><span class=\"line\">quicksort(arr,left,j);</span><br><span class=\"line\">quicksort(arr,j+<span class=\"number\">1</span>,r)</span><br></pre></td></tr></table></figure>\n写法2:<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">value = arr[left+right+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>]; <span class=\"comment\">//只要不写成right或left+right+1&gt;&gt;1都可以</span></span><br><span class=\"line\">quicksort(arr,left,i); </span><br><span class=\"line\">quicksort(arr,i-<span class=\"number\">1</span>,right);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>还有一些其他的问题，若搞懂了就回来补上来</p>\n","feature":true,"text":" 记录一下过程 123456789101112131415161718192021222324252627282930313233343536373839404...","permalink":"/post/快速排序","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"}],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"判定质数","uid":"8984c8b2f51e2d227176a0382d10ae89","slug":"判定质数","date":"2024-09-23T14:57:48.000Z","updated":"2024-09-23T14:58:03.313Z","comments":true,"path":"api/articles/判定质数.json","keywords":null,"cover":null,"text":"123456789public static boolean isPrime(int n){ if(n<2) return false; for(int i=2...","permalink":"/post/判定质数","photos":[],"count_time":{"symbolsCount":968,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"求约数","uid":"d7ab01acb793f490ba4076334688907a","slug":"求约数","date":"2024-09-23T14:56:52.000Z","updated":"2024-09-23T14:57:07.545Z","comments":true,"path":"api/articles/求约数.json","keywords":null,"cover":null,"text":" 数论的一些东西 题目描述:第一行是a，表示接下来a行是输入的数，对于每一个数要从小到大输出他的约数 记住一个性质，一个数的约数是成对出现的，例如 24 能被2...","permalink":"/post/求约数","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":8,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}