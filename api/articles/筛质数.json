{"title":"筛质数","uid":"183beebca0c6bcbcb988690a51b52267","slug":"筛质数","date":"2023-12-12T11:38:34.000Z","updated":"2023-12-17T07:43:37.430Z","comments":true,"path":"api/articles/筛质数.json","keywords":null,"cover":null,"content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个正整数 n<br>，请你求出 1∼n<br> 中质数的个数。</p>\n<p>输入格式<br>共一行，包含整数 n。</p>\n<p>输出格式<br>共一行，包含一个整数，表示 1∼n 中质数的个数。</p>\n<p>数据范围</p>\n<blockquote>\n<p>1≤n≤106</p>\n<p>输入样例：<br>8</p>\n</blockquote>\n<p>输出样例：</p>\n<blockquote>\n<p>4</p>\n<h1 id=\"埃氏筛\"><a href=\"#埃氏筛\" class=\"headerlink\" title=\"埃氏筛\"></a>埃氏筛</h1><p>思路:</p>\n<p> 开一个标记数组mark，长度是n; 遍历区间[2,sqrt(n)]之间的数字,若mark[i]为false</p>\n<p>计数器加1，把所有i的倍数全部标记为true</p>\n</blockquote>\n<pre><code class=\"lang-java\">void printPrime(int n)&#123;\n    for(int i=2;i&lt;=n/i;i++)&#123;\n        if(mark[i])\n            continue;\n        cnt++;\n        //这个for循环也可以放到上面的if当中\n        for(int j=i+i;j&lt;=n;j+=i)\n            mark[j]=true;\n    &#125;\n&#125;\n</code></pre>\n<h1 id=\"线性筛\"><a href=\"#线性筛\" class=\"headerlink\" title=\"线性筛\"></a>线性筛</h1><p>也叫做欧拉筛,这个算法的速度要比上面的要快，数据规模不大的时候，线性筛和埃氏筛效率差不多</p>\n<pre><code class=\"lang-java\">void primer(int n)&#123;\n    for(int i=2;i&lt;=n;i++)&#123;\n        if(mark[i])\n            continue;\n        primer[cnt++]=i;\n        //考虑到，primer[j]*i可能会越界,所以换成 primer[j]&lt;=n/i;    \n        for(int j=0; primer[j]*i&lt;=n;j++)&#123;\n            mark[primer[j]*i]=true;\n            if(i % primer[j]==0)// i在素数表里面找到了他的最小质因数，直接跳出循环即可\n                break;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<p>这个还有优化的空间，待会再学</p>\n","text":"题目给定一个正整数 n，请你求出 1∼n 中质数的个数。 输入格式共一行，包含整数 n。 输出格式共一行，包含一个整数，表示 1∼n 中质数的个数。 数据范围 ...","permalink":"/post/筛质数","photos":[],"count_time":{"symbolsCount":880,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%83%E6%B0%8F%E7%AD%9B\"><span class=\"toc-text\">埃氏筛</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E6%80%A7%E7%AD%9B\"><span class=\"toc-text\">线性筛</span></a></li></ol>","author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"判定质数","uid":"8984c8b2f51e2d227176a0382d10ae89","slug":"判定质数","date":"2023-12-12T12:03:36.000Z","updated":"2023-12-12T12:18:54.306Z","comments":true,"path":"api/articles/判定质数.json","keywords":null,"cover":null,"text":"public static boolean isPrime(int n)&#123; if(n&lt;2) return false; for(int i=2;...","permalink":"/post/判定质数","photos":[],"count_time":{"symbolsCount":765,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}}},"next_post":{"title":"策略模式","uid":"8ced7c3b7dad33d06ee59bde7028cd4a","slug":"策略模式","date":"2023-12-12T07:19:40.000Z","updated":"2023-12-12T09:28:36.139Z","comments":true,"path":"api/articles/策略模式.json","keywords":null,"cover":[],"text":" 是记录看《大话设计模式》这本书的感受 还是从一个想法开始入手，书中的是让我们写一个商场收银系统，由于我java没有学GUI的那部分，我就直接将效果图贴过来了不...","permalink":"/post/策略模式","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"设计模式","slug":"设计模式","count":2,"path":"api/tags/设计模式.json"}],"author":{"name":"矽","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"https://github.com/notdy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45418837","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibli.jpg","link":"https://space.bilibili.com/441747654"}}}}}}